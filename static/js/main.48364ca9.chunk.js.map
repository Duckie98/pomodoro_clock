{"version":3,"sources":["WorkController.js","BreakController.js","TimerControllers.js","Timer.js","Sound.js","App.js","serviceWorker.js","index.js"],"names":["WorkController","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","increaseWorkTime","props","timerRunning","setCurrentTime","workTime","decreaseWorkTime","inherits","createClass","key","value","react_default","a","createElement","className","onClick","Component","BreakController","increaseBreakTime","breakTime","decreaseBreakTime","TimerControllers","src_WorkController","src_BreakController","Timer","timer","clearInterval","timerId","setTimerRunning","cycle","startTimer","display","currentTime","id","Sound","toggleSound","sound","setSound","App","duration","setState","minutes","seconds","time","runningTimer","setInterval","state","Math","floor","window","open","src_Timer","src_TimerControllers","src_Sound","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48364ca9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport class WorkController extends Component {\r\n  increaseWorkTime = () => {\r\n    this.props.increaseWorkTime();\r\n\r\n    if (this.props.timerRunning === false) {\r\n      this.props.setCurrentTime(`${this.props.workTime + 1} : 00`);\r\n    }\r\n  };\r\n  decreaseWorkTime = () => {\r\n    this.props.decreaseWorkTime();\r\n    if (this.props.timerRunning === false) {\r\n      if (this.props.workTime !== 1)\r\n        this.props.setCurrentTime(`${this.props.workTime - 1} : 00`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"workTime controller\">\r\n        <h3>Work Time</h3>\r\n        <button onClick={this.increaseWorkTime}>+</button>\r\n        <span> {this.props.workTime} </span>\r\n        <button onClick={this.decreaseWorkTime}>-</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WorkController;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class BreakController extends Component {\r\n  increaseBreakTime = () => {\r\n    this.props.increaseBreakTime();\r\n    if (this.props.timerRunning === false) {\r\n      this.props.setCurrentTime(`${this.props.breakTime + 1} : 00`);\r\n    }\r\n  };\r\n  decreaseBreakTime = () => {\r\n    this.props.decreaseBreakTime();\r\n    if (this.props.timerRunning === false) {\r\n      if (this.props.breakTime !== 1)\r\n        this.props.setCurrentTime(`${this.props.breakTime - 1} : 00`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"breakTime controller\">\r\n        <h3>Break Time</h3>\r\n        <button onClick={this.increaseBreakTime}>+</button>\r\n        <span> {this.props.breakTime} </span>\r\n        <button onClick={this.decreaseBreakTime}>-</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BreakController;\r\n","import React, { Component } from \"react\";\r\nimport WorkController from \"./WorkController\";\r\nimport BreakController from \"./BreakController\";\r\n\r\nexport class TimerControllers extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"timer-controllers\">\r\n        <WorkController\r\n          workTime={this.props.workTime}\r\n          increaseWorkTime={this.props.increaseWorkTime}\r\n          decreaseWorkTime={this.props.decreaseWorkTime}\r\n          timerRunning={this.props.timerRunning}\r\n          setCurrentTime={this.props.setCurrentTime}\r\n        />\r\n        <BreakController\r\n          breakTime={this.props.breakTime}\r\n          increaseBreakTime={this.props.increaseBreakTime}\r\n          decreaseBreakTime={this.props.decreaseBreakTime}\r\n          timerRunning={this.props.timerRunning}\r\n          setCurrentTime={this.props.setCurrentTime}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimerControllers;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Timer extends Component {\r\n  timer = () => {\r\n    if (this.props.timerRunning === true) {\r\n      clearInterval(this.props.timerId);\r\n      this.props.setCurrentTime(\"25 : 00\");\r\n      this.props.setTimerRunning();\r\n    } else {\r\n      this.props.cycle === \"Working\"\r\n        ? this.props.startTimer(this.props.workTime)\r\n        : this.props.startTimer(this.props.breakTime);\r\n    }\r\n  };\r\n  render() {\r\n    let display = \"Start\";\r\n    if (this.props.timerRunning === true) {\r\n      display = \"Stop\";\r\n    }\r\n    return (\r\n      <div className=\"timer\">\r\n        <span>{this.props.currentTime}</span>\r\n        <span>{this.props.cycle}</span>\r\n        <button id=\"start\" onClick={this.timer}>\r\n          {display}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from \"react\";\r\n\r\nexport class Sound extends Component {\r\n  toggleSound = () => {\r\n    this.props.sound === \"on\"\r\n      ? this.props.setSound(\"off\")\r\n      : this.props.setSound(\"on\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.toggleSound}>Alarm</button>\r\n        <span> {this.props.sound}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sound;\r\n","import React, { Component } from \"react\";\nimport TimeControllers from \"./TimerControllers\";\nimport Timer from \"./Timer\";\nimport Sound from \"./Sound\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cycle: \"Working\",\n      workTime: 25,\n      breakTime: 5,\n      sound: \"on\",\n      timerId: 0,\n      timerRunning: false,\n      currentTime: \"25 : 00\"\n    };\n  }\n  startTimer = duration => {\n    this.setState({\n      timerRunning: true\n    });\n\n    // convert duration (min) to seconds\n    let time = duration * 60;\n    let minutes;\n    let seconds;\n    let runningTimer = setInterval(() => {\n      if (this.state.timerRunning === false) {\n        clearInterval(this.state.timerId);\n      }\n      time--;\n      this.setState({\n        timerId: runningTimer\n      });\n      minutes = Math.floor(time / 60);\n\n      seconds = time - minutes * 60;\n\n      minutes = minutes < 10 ? \"0\" + minutes : minutes;\n      seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n      this.setState({\n        currentTime: `${minutes} : ${seconds}`\n      });\n\n      if (time === 0) {\n        if (this.state.sound === \"on\") {\n          window.open(\"https://www.youtube.com/watch?v=IPXIgEAGe4U\", \"_blank\");\n        }\n        if (this.state.cycle === \"Working\") {\n          this.setState({\n            cycle: \"Break\",\n            timerRunning: false\n          });\n          clearInterval(this.state.timerId);\n          this.startTimer(this.state.breakTime);\n        } else {\n          this.setState({\n            cycle: \"Working\",\n            timerRunning: false\n          });\n          clearInterval(this.state.timerId);\n          this.startTimer(this.state.workTime);\n        }\n      }\n    }, 1000);\n  };\n  increaseWorkTime = () => {\n    this.setState({\n      workTime: this.state.workTime + 1\n    });\n  };\n\n  decreaseWorkTime = () => {\n    if (this.state.workTime === 1) {\n      this.setState({\n        workTime: 1\n      });\n    } else {\n      this.setState({\n        workTime: this.state.workTime - 1\n      });\n    }\n  };\n\n  increaseBreakTime = () => {\n    this.setState({\n      breakTime: this.state.breakTime + 1\n    });\n  };\n\n  decreaseBreakTime = () => {\n    if (this.state.breakTime === 1) {\n      this.setState({\n        breakTime: 1\n      });\n    } else {\n      this.setState({\n        breakTime: this.state.breakTime - 1\n      });\n    }\n  };\n  setCurrentTime = time => {\n    this.setState({\n      currentTime: time\n    });\n  };\n  setTimerRunning = () => {\n    this.setState({\n      timerRunning: !this.state.timerRunning\n    });\n  };\n  setSound = sound => {\n    this.setState({\n      sound: sound\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"main\">\n        <h1>POMODORO CLOCK</h1>\n        <Timer\n          workTime={this.state.workTime}\n          breakTime={this.state.breakTime}\n          currentTime={this.state.currentTime}\n          cycle={this.state.cycle}\n          timerRunning={this.state.timerRunning}\n          timerId={this.state.timerId}\n          setCurrentTime={this.setCurrentTime}\n          setTimerRunning={this.setTimerRunning}\n          startTimer={this.startTimer}\n        />\n        <TimeControllers\n          workTime={this.state.workTime}\n          breakTime={this.state.breakTime}\n          increaseWorkTime={this.increaseWorkTime}\n          decreaseWorkTime={this.decreaseWorkTime}\n          increaseBreakTime={this.increaseBreakTime}\n          decreaseBreakTime={this.decreaseBreakTime}\n          timerRunning={this.state.timerRunning}\n          setCurrentTime={this.setCurrentTime}\n        />\n        <Sound setSound={this.setSound} sound={this.state.sound} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}